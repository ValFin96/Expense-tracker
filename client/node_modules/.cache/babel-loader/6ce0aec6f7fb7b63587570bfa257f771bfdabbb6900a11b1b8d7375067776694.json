{"ast":null,"code":"var _jsxFileName = \"/Users/val/Desktop/Coding projects/Web Challenge/client/src/components/Header.tsx\";\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"h1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Typography","Box","jsxDEV","_jsxDEV","Header","text","p","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/val/Desktop/Coding projects/Web Challenge/client/src/components/Header.tsx"],"sourcesContent":["import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box'; \n\ntype HeaderProps = {\n  text: string;\n};\n\nconst Header: React.FC<HeaderProps> = ({ text }) => {\n  return (\n    <Box p={2}> {}\n      <Typography variant=\"h1\" component=\"h1\">\n        {text}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Header;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMpC,MAAMC,MAA6B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClD,oBACEF,OAAA,CAACF,GAAG;IAACK,CAAC,EAAE,CAAE;IAAAC,QAAA,GAAC,GAAC,eACVJ,OAAA,CAACH,UAAU;MAACQ,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAAAF,QAAA,EACpCF;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACC,EAAA,GARIV,MAA6B;AAUnC,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}